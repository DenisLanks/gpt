

/*************** prologo ****************************/

teste
  {}

  ast : (T_ALGORITMO)
fim

teste
  {
    algoritmo olá;
  }

  ast : (T_ALGORITMO)
fim

teste
  {
    use "bib1";
  }

  ast: (T_ALGORITMO (T_USE T_TEXTO_LITERAL))
fim

teste
  {
    use "bib1";
    use "bib2";
    use "bib3";
  }

  ast: (T_ALGORITMO
        (T_USE T_TEXTO_LITERAL)
        (T_USE T_TEXTO_LITERAL)
        (T_USE T_TEXTO_LITERAL))
fim



/*************** variaveis ****************************/



teste
  {
    variável x : inteiro;
  }

  ast: (T_ALGORITMO
           (T_VARIAVEL T_INTEIRO T_IDENTIFICADOR))
fim

teste
  {
    variável x : T;
  }

  ast: (T_ALGORITMO
           (T_VARIAVEL T_IDENTIFICADOR T_IDENTIFICADOR))

fim

teste
  {
    variável pé : literal := 10;
  }

  ast: (T_ALGORITMO
         (T_VARIAVEL T_LITERAL T_IDENTIFICADOR
           (T_VALOR (T_EXPRESSAO T_INTEIRO_LITERAL))))
fim

teste
  {
    variável x : matriz[][][][1] do tipo real;
  }

  ast: (T_ALGORITMO
         (T_VARIAVEL (T_MATRIZ T_REAL T_NULO T_NULO T_NULO T_INTEIRO_LITERAL)
          T_IDENTIFICADOR))
fim

teste
  {
    variável x : matriz[] do tipo caractere := ['6','5','4'];
  }

  ast: (T_ALGORITMO
         (T_VARIAVEL (T_MATRIZ T_CARACTERE T_NULO) T_IDENTIFICADOR
           (T_VALOR
             (T_VAL_MATRIZ
                (T_EXPRESSAO T_CARACTERE_LITERAL)
                (T_EXPRESSAO T_CARACTERE_LITERAL)
                (T_EXPRESSAO T_CARACTERE_LITERAL)))))
fim

teste
  {
    variável x : matriz[][] do tipo caractere := [['6','5'],['4','3']];
  }

  ast: (T_ALGORITMO
         (T_VARIAVEL (T_MATRIZ T_CARACTERE T_NULO T_NULO) T_IDENTIFICADOR
           (T_VALOR
             (T_VAL_MATRIZ
                (T_VAL_MATRIZ
                  (T_EXPRESSAO T_CARACTERE_LITERAL) (T_EXPRESSAO T_CARACTERE_LITERAL))
                (T_VAL_MATRIZ
                  (T_EXPRESSAO T_CARACTERE_LITERAL) (T_EXPRESSAO T_CARACTERE_LITERAL))))))
fim

teste
  {
    variável z : T;
  }

  ast: (T_ALGORITMO (T_VARIAVEL T_IDENTIFICADOR T_IDENTIFICADOR))
fim

teste
  {
    variável z : T := {chave := valor, i:=2\};
  }

  ast: (T_ALGORITMO
          (T_VARIAVEL T_IDENTIFICADOR T_IDENTIFICADOR
            (T_VALOR (T_VAL_ESTRUTURA
                        T_IDENTIFICADOR (T_EXPRESSAO (T_LVALUE T_IDENTIFICADOR))
                        T_IDENTIFICADOR (T_EXPRESSAO T_INTEIRO_LITERAL)))))
fim

teste
  {
    variável z : T := {chave := [1,2,3]\};
  }

  ast: (T_ALGORITMO
          (T_VARIAVEL T_IDENTIFICADOR T_IDENTIFICADOR
            (T_VALOR
              (T_VAL_ESTRUTURA T_IDENTIFICADOR
                (T_VAL_MATRIZ (T_EXPRESSAO T_INTEIRO_LITERAL)
                              (T_EXPRESSAO T_INTEIRO_LITERAL)
                              (T_EXPRESSAO T_INTEIRO_LITERAL))))))
fim


teste
  {
    variável z : matriz[1][2] do tipo T
      := [{chave := valor\},
          {ch:="valor"\},
          {z:=verdadeiro\}];
  }

  ast: (T_ALGORITMO
          (T_VARIAVEL
            (T_MATRIZ T_IDENTIFICADOR T_INTEIRO_LITERAL T_INTEIRO_LITERAL)
            T_IDENTIFICADOR
            (T_VALOR
              (T_VAL_MATRIZ
                (T_VAL_ESTRUTURA T_IDENTIFICADOR (T_EXPRESSAO (T_LVALUE T_IDENTIFICADOR)))
                (T_VAL_ESTRUTURA T_IDENTIFICADOR (T_EXPRESSAO T_TEXTO_LITERAL))
                (T_VAL_ESTRUTURA T_IDENTIFICADOR (T_EXPRESSAO T_VERDADEIRO))))))
fim


teste
  {
    variável z : matriz[1][2] do tipo T
      := [{chave := valor\},
          {ch:="valor"\},
          {z:=verdadeiro\}];
  }

  ast: (T_ALGORITMO
          (T_VARIAVEL
            (T_MATRIZ T_IDENTIFICADOR T_INTEIRO_LITERAL T_INTEIRO_LITERAL)
            T_IDENTIFICADOR
            (T_VALOR
              (T_VAL_MATRIZ
                (T_VAL_ESTRUTURA T_IDENTIFICADOR (T_EXPRESSAO (T_LVALUE T_IDENTIFICADOR)))
                (T_VAL_ESTRUTURA T_IDENTIFICADOR (T_EXPRESSAO T_TEXTO_LITERAL))
                (T_VAL_ESTRUTURA T_IDENTIFICADOR (T_EXPRESSAO T_VERDADEIRO))))))
fim

teste
  {
    variável z : T := {chave := [1,2,3]\};
    variável x : matriz[] do tipo caractere := ['6','5','4'];
    variável z : T;
  }

  ast: (T_ALGORITMO
          (T_VARIAVEL T_IDENTIFICADOR T_IDENTIFICADOR
            (T_VALOR
              (T_VAL_ESTRUTURA T_IDENTIFICADOR
                (T_VAL_MATRIZ (T_EXPRESSAO T_INTEIRO_LITERAL)
                              (T_EXPRESSAO T_INTEIRO_LITERAL)
                              (T_EXPRESSAO T_INTEIRO_LITERAL)))))
          (T_VARIAVEL (T_MATRIZ T_CARACTERE T_NULO) T_IDENTIFICADOR
           (T_VALOR
             (T_VAL_MATRIZ
                (T_EXPRESSAO  T_CARACTERE_LITERAL)
                (T_EXPRESSAO  T_CARACTERE_LITERAL)
                (T_EXPRESSAO  T_CARACTERE_LITERAL))))
          (T_VARIAVEL T_IDENTIFICADOR T_IDENTIFICADOR))
fim

teste
  {
    variáveis
      z : real;
    fim-variáveis
  }

  ast: (T_ALGORITMO
          (T_VARIAVEL T_REAL T_IDENTIFICADOR))
fim

teste
  {
    variáveis
      z,K : real;
    fim-variáveis
  }

  ast: (T_ALGORITMO
          (T_VARIAVEL T_REAL T_IDENTIFICADOR T_IDENTIFICADOR))
fim

teste
  {
    variáveis
      P : T;
      i,j,k : matriz[1][2] do tipo T
      := [{chave := valor\},
          {ch:='a'\},
          {z:=10.2\}];
    fim-variáveis
  }

  ast: (T_ALGORITMO
          (T_VARIAVEL T_IDENTIFICADOR T_IDENTIFICADOR)
          (T_VARIAVEL
            (T_MATRIZ T_IDENTIFICADOR T_INTEIRO_LITERAL T_INTEIRO_LITERAL)
            T_IDENTIFICADOR T_IDENTIFICADOR T_IDENTIFICADOR
            (T_VALOR
              (T_VAL_MATRIZ
                (T_VAL_ESTRUTURA T_IDENTIFICADOR (T_EXPRESSAO (T_LVALUE T_IDENTIFICADOR)))
                (T_VAL_ESTRUTURA T_IDENTIFICADOR (T_EXPRESSAO T_CARACTERE_LITERAL))
                (T_VAL_ESTRUTURA T_IDENTIFICADOR (T_EXPRESSAO T_REAL_LITERAL))))))
fim


teste
  {
    variável x : inteiro;
    variáveis
      P : T;
      i,j,k : matriz[1][2] do tipo T
      := [{chave := valor\},
          {ch:='a'\},
          {z:=10.2\}];
    fim-variáveis
    variável z : T := {chave := valor\};
  }

  ast:  (T_ALGORITMO
           (T_VARIAVEL T_INTEIRO T_IDENTIFICADOR)
           (T_VARIAVEL T_IDENTIFICADOR T_IDENTIFICADOR)
           (T_VARIAVEL
               (T_MATRIZ T_IDENTIFICADOR
                         T_INTEIRO_LITERAL
                         T_INTEIRO_LITERAL)
               T_IDENTIFICADOR T_IDENTIFICADOR T_IDENTIFICADOR
               (T_VALOR
                  (T_VAL_MATRIZ
                     (T_VAL_ESTRUTURA T_IDENTIFICADOR (T_EXPRESSAO (T_LVALUE T_IDENTIFICADOR)))
                     (T_VAL_ESTRUTURA T_IDENTIFICADOR (T_EXPRESSAO T_CARACTERE_LITERAL))
                     (T_VAL_ESTRUTURA T_IDENTIFICADOR (T_EXPRESSAO T_REAL_LITERAL)))))
          (T_VARIAVEL T_IDENTIFICADOR T_IDENTIFICADOR
             (T_VALOR (T_VAL_ESTRUTURA T_IDENTIFICADOR (T_EXPRESSAO (T_LVALUE T_IDENTIFICADOR))))))
fim


teste
  {
    algoritmo teste;
    use "bib1";
    use "bib2";

    variável x : inteiro;
    variáveis
      P : T;
      i,j,k : matriz[1][2] do tipo T
      := [{chave := valor\},
          {ch:='a'\},
          {z:=10.2\}];
    fim-variáveis
    variável z : T := {chave := valor\};
  }

  ast:  (T_ALGORITMO
           (T_USE T_TEXTO_LITERAL)
           (T_USE T_TEXTO_LITERAL)
           (T_VARIAVEL T_INTEIRO T_IDENTIFICADOR)
           (T_VARIAVEL T_IDENTIFICADOR T_IDENTIFICADOR)
           (T_VARIAVEL
               (T_MATRIZ T_IDENTIFICADOR
                         T_INTEIRO_LITERAL
                         T_INTEIRO_LITERAL)
               T_IDENTIFICADOR T_IDENTIFICADOR T_IDENTIFICADOR
               (T_VALOR (T_VAL_MATRIZ
                     (T_VAL_ESTRUTURA T_IDENTIFICADOR (T_EXPRESSAO (T_LVALUE T_IDENTIFICADOR)))
                     (T_VAL_ESTRUTURA T_IDENTIFICADOR (T_EXPRESSAO T_CARACTERE_LITERAL))
                     (T_VAL_ESTRUTURA T_IDENTIFICADOR (T_EXPRESSAO T_REAL_LITERAL)))))
           (T_VARIAVEL T_IDENTIFICADOR T_IDENTIFICADOR
             (T_VALOR (T_VAL_ESTRUTURA T_IDENTIFICADOR (T_EXPRESSAO (T_LVALUE T_IDENTIFICADOR))))))
fim



/*************** constantes ****************************/



teste
  {
    constante x : inteiro := 10;
  }

  ast: (T_ALGORITMO
          (T_CONSTANTE T_INTEIRO T_IDENTIFICADOR
            (T_VALOR (T_EXPRESSAO T_INTEIRO_LITERAL))))
fim


teste
  {
    constante x : matriz[1] do tipo inteiro := [1,2,3];
  }

  ast: (T_ALGORITMO
          (T_CONSTANTE
            (T_MATRIZ T_INTEIRO T_INTEIRO_LITERAL) T_IDENTIFICADOR
              (T_VALOR
                (T_VAL_MATRIZ
                  (T_EXPRESSAO T_INTEIRO_LITERAL)
                  (T_EXPRESSAO T_INTEIRO_LITERAL)
                  (T_EXPRESSAO T_INTEIRO_LITERAL)))))
fim

teste
  {
    constante x : T := {c:=v,c:=10.3\};
  }

  ast: (T_ALGORITMO
          (T_CONSTANTE T_IDENTIFICADOR T_IDENTIFICADOR
            (T_VALOR
              (T_VAL_ESTRUTURA
                T_IDENTIFICADOR (T_EXPRESSAO (T_LVALUE T_IDENTIFICADOR))
                T_IDENTIFICADOR (T_EXPRESSAO T_REAL_LITERAL)))))
fim

teste
  {
    constante x : matriz[1] do tipo T := [{c:=1,c:=10.3\},{c:='1',c:="1"\}];
  }

  ast: (T_ALGORITMO
          (T_CONSTANTE
            (T_MATRIZ T_IDENTIFICADOR T_INTEIRO_LITERAL) T_IDENTIFICADOR
              (T_VALOR
                (T_VAL_MATRIZ
                  (T_VAL_ESTRUTURA
                    T_IDENTIFICADOR (T_EXPRESSAO T_INTEIRO_LITERAL)
                    T_IDENTIFICADOR (T_EXPRESSAO T_REAL_LITERAL))
                  (T_VAL_ESTRUTURA
                    T_IDENTIFICADOR (T_EXPRESSAO T_CARACTERE_LITERAL)
                    T_IDENTIFICADOR (T_EXPRESSAO T_TEXTO_LITERAL))))))
fim


teste
  {
    constante x : inteiro := 10;
    constante x : matriz[1] do tipo T := [{c:=1,c:=10.3\},{c:='1',c:="1"\}];
  }

  ast: (T_ALGORITMO
         (T_CONSTANTE T_INTEIRO T_IDENTIFICADOR
            (T_VALOR (T_EXPRESSAO T_INTEIRO_LITERAL)))
          (T_CONSTANTE
            (T_MATRIZ T_IDENTIFICADOR T_INTEIRO_LITERAL) T_IDENTIFICADOR
              (T_VALOR
                (T_VAL_MATRIZ
                  (T_VAL_ESTRUTURA
                    T_IDENTIFICADOR (T_EXPRESSAO T_INTEIRO_LITERAL)
                    T_IDENTIFICADOR (T_EXPRESSAO T_REAL_LITERAL))
                  (T_VAL_ESTRUTURA
                    T_IDENTIFICADOR (T_EXPRESSAO T_CARACTERE_LITERAL)
                    T_IDENTIFICADOR (T_EXPRESSAO T_TEXTO_LITERAL))))))
fim

teste
  {
    constantes
      x : inteiro := 10;
      i : matriz[1][2] do tipo T :=
           [{chave := valor\},
            {ch:='a'\},
            {z:=10.2\}];
    fim-constantes
  }

  ast : (T_ALGORITMO
          (T_CONSTANTE T_INTEIRO T_IDENTIFICADOR
                        (T_VALOR (T_EXPRESSAO T_INTEIRO_LITERAL)))
          (T_CONSTANTE
            (T_MATRIZ T_IDENTIFICADOR T_INTEIRO_LITERAL T_INTEIRO_LITERAL)
             T_IDENTIFICADOR
            (T_VALOR
              (T_VAL_MATRIZ
                (T_VAL_ESTRUTURA T_IDENTIFICADOR (T_EXPRESSAO (T_LVALUE T_IDENTIFICADOR)))
                (T_VAL_ESTRUTURA T_IDENTIFICADOR (T_EXPRESSAO T_CARACTERE_LITERAL))
                (T_VAL_ESTRUTURA T_IDENTIFICADOR (T_EXPRESSAO T_REAL_LITERAL))))))
fim

teste
  {
    constantes
      x : inteiro := 10;
      i : matriz[1][2] do tipo T :=
           [{chave := valor\},
            {ch:='a'\},
            {z:=10.2\}];
    fim-constantes
    constante x : T := {c:=v,c:=10.3\};
  }

  ast : (T_ALGORITMO
          (T_CONSTANTE T_INTEIRO T_IDENTIFICADOR
                        (T_VALOR (T_EXPRESSAO T_INTEIRO_LITERAL)))
          (T_CONSTANTE
            (T_MATRIZ T_IDENTIFICADOR T_INTEIRO_LITERAL T_INTEIRO_LITERAL)
             T_IDENTIFICADOR
            (T_VALOR
              (T_VAL_MATRIZ
                (T_VAL_ESTRUTURA T_IDENTIFICADOR (T_EXPRESSAO (T_LVALUE T_IDENTIFICADOR)))
                (T_VAL_ESTRUTURA T_IDENTIFICADOR (T_EXPRESSAO T_CARACTERE_LITERAL))
                (T_VAL_ESTRUTURA T_IDENTIFICADOR (T_EXPRESSAO T_REAL_LITERAL)))))
                    (T_CONSTANTE T_IDENTIFICADOR T_IDENTIFICADOR
            (T_VALOR
              (T_VAL_ESTRUTURA
                T_IDENTIFICADOR (T_EXPRESSAO (T_LVALUE T_IDENTIFICADOR))
                T_IDENTIFICADOR (T_EXPRESSAO T_REAL_LITERAL)))))
fim



/*************** estruturas ****************************/

teste
  {
    estrutura T
      P : T;
      x : inteiro := 1;
      i,j,k : matriz[1][2] do tipo T
        := [{chave := valor\},
            {ch:='a'\},
            {z:=10.2\}];
    fim-estrutura
  }

  ast: (T_ALGORITMO
          (T_ESTRUTURA T_IDENTIFICADOR
            (T_VARIAVEL T_IDENTIFICADOR T_IDENTIFICADOR)
            (T_VARIAVEL T_INTEIRO T_IDENTIFICADOR
               (T_VALOR (T_EXPRESSAO T_INTEIRO_LITERAL)))
            (T_VARIAVEL
              (T_MATRIZ T_IDENTIFICADOR T_INTEIRO_LITERAL T_INTEIRO_LITERAL)
              T_IDENTIFICADOR T_IDENTIFICADOR T_IDENTIFICADOR
              (T_VALOR
                (T_VAL_MATRIZ
                  (T_VAL_ESTRUTURA T_IDENTIFICADOR (T_EXPRESSAO (T_LVALUE T_IDENTIFICADOR)))
                  (T_VAL_ESTRUTURA T_IDENTIFICADOR (T_EXPRESSAO T_CARACTERE_LITERAL))
                  (T_VAL_ESTRUTURA T_IDENTIFICADOR (T_EXPRESSAO T_REAL_LITERAL)))))))
fim




/*************** subprogramas ****************************/

teste
  {
    procedimento p()
    início
    fim
  }

  ast : (T_ALGORITMO
          (T_PROCEDIMENTO T_IDENTIFICADOR (T_INICIO)))
fim

teste
  {
    procedimento p(i:inteiro, t:T)
    início
    fim
  }

  ast : (T_ALGORITMO
          (T_PROCEDIMENTO T_IDENTIFICADOR
              (T_PARAM T_INTEIRO T_IDENTIFICADOR)
              (T_PARAM T_IDENTIFICADOR T_IDENTIFICADOR)
            (T_INICIO)))
fim

teste
  {
    procedimento p(i:inteiro, g: matriz[1][] do tipo real)
    início
    fim
  }

  ast : (T_ALGORITMO
          (T_PROCEDIMENTO T_IDENTIFICADOR
              (T_PARAM T_INTEIRO T_IDENTIFICADOR)
              (T_PARAM
                (T_MATRIZ T_REAL T_INTEIRO_LITERAL T_NULO) T_IDENTIFICADOR)
            (T_INICIO)))
fim

teste
  {
    procedimento p(i:inteiro, t:T, ... resto)
    início
    fim
  }

  ast : (T_ALGORITMO
          (T_PROCEDIMENTO T_IDENTIFICADOR
              (T_PARAM T_INTEIRO T_IDENTIFICADOR)
              (T_PARAM T_IDENTIFICADOR T_IDENTIFICADOR)
              (T_PARAM T_RETICENCIAS T_IDENTIFICADOR)
            (T_INICIO)))
fim


teste
  {
    procedimento p()
      variável x : inteiro;
    início
    fim
  }

  ast : (T_ALGORITMO
          (T_PROCEDIMENTO T_IDENTIFICADOR
              (T_VARIAVEL T_INTEIRO T_IDENTIFICADOR)
            (T_INICIO)))
fim


teste
  {
    procedimento p(i:inteiro, t:T)
      variável x : inteiro;
    início
    fim
  }

  ast : (T_ALGORITMO
          (T_PROCEDIMENTO T_IDENTIFICADOR
              (T_PARAM T_INTEIRO T_IDENTIFICADOR)
              (T_PARAM T_IDENTIFICADOR T_IDENTIFICADOR)
              (T_VARIAVEL T_INTEIRO T_IDENTIFICADOR)
            (T_INICIO)))
fim



teste
  {
    função f(i:inteiro, t:T, ... resto) : literal
      variável x : inteiro;
      variáveis
        P : T;
        i,j,k : matriz[1][2] do tipo T
        := [{chave := valor\},
            {ch:='a'\},
            {z:=10.2\}];
      fim-variáveis
      variável z : T := {chave := valor\};
    início
    fim
  }

  ast : (T_ALGORITMO
          (T_FUNCAO T_IDENTIFICADOR
              (T_PARAM T_INTEIRO T_IDENTIFICADOR)
              (T_PARAM T_IDENTIFICADOR T_IDENTIFICADOR)
              (T_PARAM T_RETICENCIAS T_IDENTIFICADOR)
              (T_TIPO_RETORNO T_LITERAL)
           (T_VARIAVEL T_INTEIRO T_IDENTIFICADOR)
              (T_VARIAVEL T_IDENTIFICADOR T_IDENTIFICADOR)
              (T_VARIAVEL
                  (T_MATRIZ T_IDENTIFICADOR
                            T_INTEIRO_LITERAL
                            T_INTEIRO_LITERAL)
                  T_IDENTIFICADOR T_IDENTIFICADOR T_IDENTIFICADOR
                  (T_VALOR (T_VAL_MATRIZ
                        (T_VAL_ESTRUTURA T_IDENTIFICADOR (T_EXPRESSAO (T_LVALUE T_IDENTIFICADOR)))
                        (T_VAL_ESTRUTURA T_IDENTIFICADOR (T_EXPRESSAO T_CARACTERE_LITERAL))
                        (T_VAL_ESTRUTURA T_IDENTIFICADOR (T_EXPRESSAO T_REAL_LITERAL)))))
           (T_VARIAVEL T_IDENTIFICADOR T_IDENTIFICADOR
             (T_VALOR (T_VAL_ESTRUTURA T_IDENTIFICADOR (T_EXPRESSAO (T_LVALUE T_IDENTIFICADOR)))))
            (T_INICIO)))
fim





/************** expressões *****************************/




teste
  {
    variável x : inteiro;
    início
      x := 1 + 1;
    fim
  }

  ast: (T_ALGORITMO
         (T_VARIAVEL T_INTEIRO T_IDENTIFICADOR)
         (T_INICIO
            (T_ATRIBUICAO (T_LVALUE T_IDENTIFICADOR)
              (T_EXPRESSAO (T_MAIS T_INTEIRO_LITERAL T_INTEIRO_LITERAL)))))
fim

teste
  {
    início
      x := 1 + 2 * 3;
    fim
  }

  ast: (T_ALGORITMO
         (T_INICIO
            (T_ATRIBUICAO (T_LVALUE T_IDENTIFICADOR)
              (T_EXPRESSAO (T_MAIS T_INTEIRO_LITERAL
                (T_MULTIP T_INTEIRO_LITERAL T_INTEIRO_LITERAL))))))
fim




/******************* enunciados **************************/

teste
  {
    início
      para x de 0 até 10 faça
        para x de 0 até 1 passo -1 faça
          x := 1;
        fim-para
      fim-para
    fim
  }


  ast:
    (T_ALGORITMO
      (T_INICIO
        (T_PARA (T_LVALUE T_IDENTIFICADOR) (T_EXPRESSAO T_INTEIRO_LITERAL) (T_EXPRESSAO T_INTEIRO_LITERAL)
          (T_PARA (T_LVALUE T_IDENTIFICADOR) (T_EXPRESSAO T_INTEIRO_LITERAL) (T_EXPRESSAO T_INTEIRO_LITERAL)
                ( T_PASSO T_MENOS T_INTEIRO_LITERAL )
            ( T_ATRIBUICAO (T_LVALUE T_IDENTIFICADOR) (T_EXPRESSAO T_INTEIRO_LITERAL))))))
fim

teste
  {
    início
      enquanto x > 10 / 3 faça
        repita
          se x % 2 <> 3 / 4 então
            f(x);
          fim-se
        até 10 > 3
      fim-enquanto
    fim
  }
  ast:
    (T_ALGORITMO
      (T_INICIO
        (T_ENQUANTO
          (T_EXPRESSAO (T_MAIOR (T_LVALUE T_IDENTIFICADOR) (T_DIV T_INTEIRO_LITERAL T_INTEIRO_LITERAL)))
            (T_REPITA
              (T_SE (T_EXPRESSAO (T_DIFERENTE
                      (T_MOD (T_LVALUE T_IDENTIFICADOR) T_INTEIRO_LITERAL)
                      (T_DIV T_INTEIRO_LITERAL T_INTEIRO_LITERAL)))
                (T_CALL T_IDENTIFICADOR (T_EXPRESSAO (T_LVALUE T_IDENTIFICADOR))))
              T_ATE (T_EXPRESSAO (T_MAIOR T_INTEIRO_LITERAL T_INTEIRO_LITERAL))))))
fim

teste
  {
    início
      sair;

      se verdadeiro então
        retorne a.b >> a[1];
      senão
        f((1+2)*3);
      fim-se
    fim
  }

  ast:
    (T_ALGORITMO
      (T_INICIO
        (T_SAIR)
        (T_SE (T_EXPRESSAO T_VERDADEIRO)
          (T_RETORNE (T_EXPRESSAO (T_BIT_SHIFT_RIGHT
                        (T_LVALUE T_IDENTIFICADOR (T_MEMBRO (T_LVALUE T_IDENTIFICADOR)))
                        (T_LVALUE T_IDENTIFICADOR (T_SUBSCRITO (T_EXPRESSAO T_INTEIRO_LITERAL))))))
          T_SENAO (T_CALL T_IDENTIFICADOR (T_EXPRESSAO (T_MULTIP
                                            (T_EXPRESSAO (T_MAIS T_INTEIRO_LITERAL
                                                                T_INTEIRO_LITERAL))
                                                        T_INTEIRO_LITERAL))))))

fim


teste
  {
    início
      caso x seja
        "teste" faça
          f(1);
          x := 1;
        fim-faça

        1.0 faça
          x := 1;
        fim-faça

        senão
          x := 1;
        fim-senão
      fim-caso
    fim
  }

  ast:
      (T_ALGORITMO
        (T_INICIO
          (T_CASO (T_EXPRESSAO (T_LVALUE T_IDENTIFICADOR))
            (T_FACA T_TEXTO_LITERAL
              (T_CALL T_IDENTIFICADOR (T_EXPRESSAO  T_INTEIRO_LITERAL))
              (T_ATRIBUICAO (T_LVALUE T_IDENTIFICADOR) (T_EXPRESSAO T_INTEIRO_LITERAL)))
            (T_FACA T_REAL_LITERAL
              (T_ATRIBUICAO (T_LVALUE T_IDENTIFICADOR) (T_EXPRESSAO T_INTEIRO_LITERAL)))
            (T_SENAO
              (T_ATRIBUICAO (T_LVALUE T_IDENTIFICADOR) (T_EXPRESSAO T_INTEIRO_LITERAL))))))

fim